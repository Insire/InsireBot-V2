<local:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:domain="clr-namespace:Maple.Domain;assembly=Maple.Domain"
                                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                                xmlns:icons="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks"
                                xmlns:local="clr-namespace:Maple"
                                xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                                xmlns:mvvm="clr-namespace:MvvmScarletToolkit.Observables;assembly=MvvmScarletToolkit.Observables">

    <!--  Remember: the order of these styles matters, since they depend on each other. If one references for a style not yet declared, you get random RuntimeErrors  -->

    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleButtonStyle}" TargetType="{x:Type RadioButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleButtonStyle}" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="{x:Type local:ListBox}" />

    <Style x:Key="HugeIconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="48" />
        <Setter Property="Width" Value="48" />
    </Style>

    <Style x:Key="BigIconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
    </Style>

    <Style x:Key="IconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
    </Style>

    <Style x:Key="MiniIconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
    </Style>

    <Style x:Key="BaseWindowStyle"
           BasedOn="{StaticResource {x:Type metro:MetroWindow}}"
           TargetType="{x:Type metro:MetroWindow}">
        <Setter Property="FontFamily" Value="pack://application:,,,/Maple;component/Resources/Roboto/#Roboto" />
        <Setter Property="GlowBrush" Value="Black" />
        <Setter Property="Height" Value=" 540" />
        <Setter Property="MinHeight" Value="540" />
        <Setter Property="MinWidth" Value="960" />

        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="SaveWindowPosition" Value="False" />

        <Setter Property="ShowIconOnTitleBar" Value="False" />
        <Setter Property="TextElement.FontSize" Value="13" />
        <Setter Property="TextElement.FontWeight" Value="Regular" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="Width" Value="960" />
    </Style>

    <DataTemplate DataType="{x:Type mvvm:Scene}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ContentControl Grid.Row="0"
                            HorizontalAlignment="Center"
                            Content="{Binding Localization.Value}"
                            FontFamily="pack://application:,,,/Maple;component/Resources/Roboto/#Roboto"
                            FontSize="{DynamicResource HeaderFontSize}" />

            <ContentControl Grid.Row="1"
                            Content="{Binding Content}"
                            Focusable="False" />
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:AudioDevice}">
        <TextBlock Text="{Binding Name}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type mvvm:LocalizationViewModel}">
        <TextBlock Text="{Binding Value}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:OptionsViewModel}">
        <TextBlock>Options</TextBlock>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:Playlist}">
        <TextBlock Text="{Binding Title}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MediaItem}">
        <TextBlock Text="{Binding Title}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="UnLoaded">
                    <i:InvokeCommandAction Command="{Binding UnloadCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBlock>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:Playlists}">
        <local:ListBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="UnLoaded">
                    <i:InvokeCommandAction Command="{Binding UnloadCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </local:ListBox>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:AudioDevices}">
        <ComboBox DockPanel.Dock="Right"
                  ItemsSource="{Binding Items}"
                  SelectedItem="{Binding SelectedItem}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="UnLoaded">
                    <i:InvokeCommandAction Command="{Binding UnloadCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ComboBox>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MediaPlayer}">
        <DockPanel Margin="0,4,0,4">
            <icons:PackIconOcticons Margin="4,0,8,0"
                                    VerticalAlignment="Stretch"
                                    DockPanel.Dock="Left"
                                    Kind="Unmute" />

            <StackPanel Margin="0,0,4,0" Orientation="Vertical">
                <TextBlock FontSize="16" Text="{Binding Name, Mode=OneWay}" />

                <TextBlock Margin="4,0,0,0"
                           FontWeight="Light"
                           Text="{Binding Playlist.Title, Mode=OneWay}" />
            </StackPanel>
        </DockPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MediaPlayers}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="4" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="4" />
            </Grid.ColumnDefinitions>

            <ScrollViewer Grid.Row="0" Grid.Column="0">
                <local:ListBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}">
                    <local:ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add">
                                <MenuItem.Icon>
                                    <icons:PackIconMaterial Margin="4" Kind="PlaylistPlus" />
                                </MenuItem.Icon>
                                <MenuItem Header="New">
                                    <MenuItem.Icon>
                                        <icons:PackIconMaterial Margin="4" Kind="Plus" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="From Url">
                                    <MenuItem.Icon>
                                        <icons:PackIconMaterial Margin="4" Kind="Download" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="From File">
                                    <MenuItem.Icon>
                                        <icons:PackIconMaterial Margin="4" Kind="File" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="From Folder">
                                    <MenuItem.Icon>
                                        <icons:PackIconMaterial Margin="4" Kind="Folder" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="Remove">
                                <MenuItem.Icon>
                                    <icons:PackIconMaterial Margin="4" Kind="PlaylistMinus" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Clear">
                                <MenuItem.Icon>
                                    <icons:PackIconMaterial Margin="4" Kind="PlaylistRemove" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </local:ListBox.ContextMenu>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="UnLoaded">
                            <i:InvokeCommandAction Command="{Binding UnloadCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </local:ListBox>
            </ScrollViewer>

            <TextBlock Grid.Row="2"
                       Grid.Column="0"
                       HorizontalAlignment="Right"
                       Text="{Binding Count, StringFormat={}{0} Players}" />

            <ContentControl Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="2">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type local:MediaPlayer}">
                        <DockPanel>
                            <ComboBox DockPanel.Dock="Top"
                                      ItemsSource="{Binding Playlists.Items}"
                                      SelectedItem="{Binding Playlist}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:InvokeCommandAction Command="{Binding Playlists.LoadCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="UnLoaded">
                                        <i:InvokeCommandAction Command="{Binding Playlists.UnloadCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>

                            <ComboBox DockPanel.Dock="Top"
                                      ItemsSource="{Binding AudioDevices.Items}"
                                      SelectedItem="{Binding Player.AudioDevice}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:InvokeCommandAction Command="{Binding AudioDevices.LoadCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="UnLoaded">
                                        <i:InvokeCommandAction Command="{Binding AudioDevices.UnloadCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>

                            <Grid DockPanel.Dock="Bottom">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <icons:PackIconMaterial Grid.Column="0"
                                                            Width="20"
                                                            Height="20"
                                                            Margin="4,0,0,0"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Kind="VolumeLow" />
                                    <Slider Grid.Column="1"
                                            VerticalAlignment="Center"
                                            AutoToolTipPlacement="BottomRight"
                                            Maximum="100"
                                            Minimum="0"
                                            TickFrequency="1"
                                            TickPlacement="None"
                                            ToolTip="{local:Translation Volume}"
                                            Value="{Binding Player.Volume}" />

                                    <icons:PackIconMaterial Grid.Column="2"
                                                            Width="20"
                                                            Height="20"
                                                            Margin="4,0"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Kind="VolumeHigh" />
                                </Grid>

                                <DockPanel Grid.Column="2" LastChildFill="True">
                                    <Button Grid.Row="0"
                                            Grid.Column="0"
                                            Width="50"
                                            Height="50"
                                            Command="{Binding PreviousCommand}"
                                            DockPanel.Dock="Left"
                                            Style="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}"
                                            ToolTip="{local:Translation Previous}">
                                        <icons:PackIconMaterial Kind="SkipPrevious" />
                                    </Button>
                                    <Button Grid.Row="0"
                                            Grid.Column="2"
                                            Width="50"
                                            Height="50"
                                            Command="{Binding NextCommand}"
                                            DockPanel.Dock="Right"
                                            Style="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}"
                                            ToolTip="{local:Translation Next}">
                                        <icons:PackIconMaterial Kind="SkipNext" />
                                    </Button>
                                    <ToggleButton Grid.Row="0"
                                                  Grid.Column="1"
                                                  Width="50"
                                                  Height="50"
                                                  Style="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}"
                                                  ToolTip="{local:Translation Playback}">
                                        <icons:PackIconMaterial Kind="Play" />
                                    </ToggleButton>
                                </DockPanel>

                                <DockPanel Grid.Column="4" LastChildFill="True">
                                    <DockPanel LastChildFill="False">
                                        <ToggleButton Width="50"
                                                      Height="50"
                                                      DockPanel.Dock="Left"
                                                      IsChecked="{Binding Playlist.IsShuffeling}"
                                                      Style="{DynamicResource MahApps.Metro.Styles.MetroCircleToggleButtonStyle}"
                                                      ToolTip="{local:Translation PlaybackShuffle}">
                                            <icons:PackIconMaterial Kind="Shuffle" />
                                        </ToggleButton>

                                        <StackPanel DataContext="{Binding Playlist}"
                                                    DockPanel.Dock="Right"
                                                    Orientation="Horizontal"
                                                    ToolTip="{local:Translation PlaybackMode}">

                                            <RadioButton Width="40"
                                                         Height="40"
                                                         IsChecked="{Binding RepeatMode, Converter={local:RadioButtonCheckedConverter}, ConverterParameter={x:Static domain:RepeatMode.None}}"
                                                         ToolTip="{local:Translation PlaybackModeNone}">
                                                <icons:PackIconMaterial Kind="RepeatOff" />
                                            </RadioButton>
                                            <RadioButton Width="40"
                                                         Height="40"
                                                         IsChecked="{Binding RepeatMode, Converter={local:RadioButtonCheckedConverter}, ConverterParameter={x:Static domain:RepeatMode.Single}}"
                                                         ToolTip="{local:Translation PlaybackModeOne}">
                                                <icons:PackIconMaterial Kind="RepeatOnce" />
                                            </RadioButton>
                                            <RadioButton Width="40"
                                                         Height="40"
                                                         IsChecked="{Binding RepeatMode, Converter={local:RadioButtonCheckedConverter}, ConverterParameter={x:Static domain:RepeatMode.All}}"
                                                         ToolTip="{local:Translation PlaybackModeAll}">
                                                <icons:PackIconMaterial Kind="Repeat" />
                                            </RadioButton>
                                        </StackPanel>
                                    </DockPanel>
                                </DockPanel>
                            </Grid>

                            <ContentControl>
                                <ContentControl.Resources>
                                    <DataTemplate DataType="{x:Type local:Playlist}">
                                        <DockPanel>
                                            <TextBlock Margin="0,0,4,4"
                                                       HorizontalAlignment="Right"
                                                       DockPanel.Dock="Bottom"
                                                       Text="{Binding MediaItems.Count, StringFormat={}{0} Songs}" />

                                            <local:ListBox ItemsSource="{Binding MediaItems.Items}" SelectedItem="{Binding MediaItems.SelectedItem}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Loaded">
                                                        <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="UnLoaded">
                                                        <i:InvokeCommandAction Command="{Binding UnloadCommand}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <local:ListBox.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Add">
                                                            <MenuItem.Icon>
                                                                <icons:PackIconMaterial Margin="4" Kind="PlaylistPlus" />
                                                            </MenuItem.Icon>
                                                            <MenuItem Header="New">
                                                                <MenuItem.Icon>
                                                                    <icons:PackIconMaterial Margin="4" Kind="Plus" />
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                            <MenuItem Header="From Url">
                                                                <MenuItem.Icon>
                                                                    <icons:PackIconMaterial Margin="4" Kind="Download" />
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                            <MenuItem Header="From File">
                                                                <MenuItem.Icon>
                                                                    <icons:PackIconMaterial Margin="4" Kind="File" />
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                            <MenuItem Header="From Folder">
                                                                <MenuItem.Icon>
                                                                    <icons:PackIconMaterial Margin="4" Kind="Folder" />
                                                                </MenuItem.Icon>
                                                            </MenuItem>
                                                        </MenuItem>
                                                        <MenuItem Header="Remove">
                                                            <MenuItem.Icon>
                                                                <icons:PackIconMaterial Margin="4" Kind="PlaylistMinus" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                        <MenuItem Header="Clear">
                                                            <MenuItem.Icon>
                                                                <icons:PackIconMaterial Margin="4" Kind="PlaylistRemove" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </local:ListBox.ContextMenu>
                                            </local:ListBox>
                                        </DockPanel>
                                    </DataTemplate>
                                </ContentControl.Resources>
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Setter Property="Content" Value="{Binding Playlist}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Content}" Value="{x:Null}">
                                                <Setter Property="ContentControl.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <DockPanel>
                                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">No playlist selected</TextBlock>
                                                            </DockPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </DockPanel>
                    </DataTemplate>
                </ContentControl.Resources>
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Setter Property="Content" Value="{Binding SelectedItem}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Content}" Value="{x:Null}">
                                <Setter Property="ContentControl.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <DockPanel>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">No media player selected</TextBlock>
                                            </DockPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>
    </DataTemplate>
</local:SharedResourceDictionary>
