<local:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:icons="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks"
                                xmlns:local="clr-namespace:Maple"
                                xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                                xmlns:mvvm="clr-namespace:MvvmScarletToolkit.Observables;assembly=MvvmScarletToolkit.Observables">

    <!--  Remember: the order of these styles matters, since they depend on each other. If one references for a style not yet declared, you get random RuntimeErrors  -->

    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="{x:Type local:ListBox}" />

    <Style x:Key="HugeIconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="48" />
        <Setter Property="Width" Value="48" />
    </Style>

    <Style x:Key="BigIconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
    </Style>

    <Style x:Key="IconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
    </Style>

    <Style x:Key="MiniIconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
    </Style>

    <Style x:Key="BaseWindowStyle"
           BasedOn="{StaticResource {x:Type metro:MetroWindow}}"
           TargetType="{x:Type metro:MetroWindow}">
        <Setter Property="FontFamily" Value="pack://application:,,,/Maple;component/Resources/Roboto/#Roboto" />
        <Setter Property="GlowBrush" Value="Black" />
        <Setter Property="Height" Value=" 540" />
        <Setter Property="MinHeight" Value="540" />
        <Setter Property="MinWidth" Value="960" />

        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="SaveWindowPosition" Value="False" />

        <Setter Property="ShowIconOnTitleBar" Value="False" />
        <Setter Property="TextElement.FontSize" Value="13" />
        <Setter Property="TextElement.FontWeight" Value="Regular" />
        <Setter Property="TitleCharacterCasing" Value="Normal" />
        <Setter Property="Width" Value="960" />
    </Style>

    <DataTemplate DataType="{x:Type mvvm:Scene}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ContentControl Grid.Row="0"
                            HorizontalAlignment="Center"
                            Content="{Binding DisplayName}"
                            FontFamily="{DynamicResource HeaderFontFamily}"
                            FontSize="{DynamicResource HeaderFontSize}" />
            <ScrollViewer Grid.Row="1"
                          Focusable="False"
                          HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Auto">
                <ContentControl Content="{Binding Content}" Focusable="False" />
            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type mvvm:LocalizationViewModel}">
        <TextBlock Text="{Binding Value}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:OptionsViewModel}">
        <TextBlock>Options</TextBlock>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:Playlist}">
        <TextBlock>Playlist</TextBlock>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:Playlists}">
        <local:ListBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MediaPlayer}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <icons:PackIconMaterial Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Kind="VolumeLow"
                                        Style="{StaticResource IconStyle}" />
                <Slider Grid.Column="1"
                        VerticalAlignment="Center"
                        AutoToolTipPlacement="BottomRight"
                        Maximum="100"
                        Minimum="0"
                        TickFrequency="1"
                        TickPlacement="None"
                        ToolTip="{local:Translation Volume}"
                        Value="{Binding Player.Volume}" />
                <icons:PackIconMaterial Grid.Column="2"
                                        VerticalAlignment="Center"
                                        Kind="VolumeMedium"
                                        Style="{StaticResource IconStyle}" />
            </Grid>

            <DockPanel Grid.Column="3" LastChildFill="True">
                <Button Grid.Row="0"
                        Grid.Column="0"
                        Command="{Binding PreviousCommand}"
                        DockPanel.Dock="Left"
                        ToolTip="{local:Translation Previous}" />
                <Button Grid.Row="0"
                        Grid.Column="2"
                        Command="{Binding NextCommand}"
                        DockPanel.Dock="Right"
                        ToolTip="{local:Translation Next}" />
                <Button Grid.Row="0"
                        Grid.Column="1"
                        ToolTip="{local:Translation Playback}" />
            </DockPanel>

            <DockPanel Grid.Column="5" LastChildFill="True">
                <DockPanel LastChildFill="False">
                    <ToggleButton DockPanel.Dock="Left"
                                  IsChecked="{Binding Playlist.IsShuffeling}"
                                  ToolTip="{local:Translation PlaybackShuffle}" />

                    <StackPanel DataContext="{Binding Playlist}"
                                DockPanel.Dock="Right"
                                Orientation="Horizontal"
                                ToolTip="{local:Translation PlaybackMode}">

                        <!--<RadioButton IsChecked="{Binding RepeatMode, Converter={local:RadioButtonCheckedConverter}, ConverterParameter={x:Static domain:RepeatMode.None}}" ToolTip="{local:Translation PlaybackModeNone}" />
                        <RadioButton IsChecked="{Binding RepeatMode, Converter={local:RadioButtonCheckedConverter}, ConverterParameter={x:Static domain:RepeatMode.Single}}" ToolTip="{local:Translation PlaybackModeOne}" />
                        <RadioButton IsChecked="{Binding RepeatMode, Converter={local:RadioButtonCheckedConverter}, ConverterParameter={x:Static domain:RepeatMode.All}}" ToolTip="{local:Translation PlaybackModeAll}" />-->
                    </StackPanel>
                </DockPanel>
            </DockPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MediaPlayers}">
        <local:ListBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}" />
    </DataTemplate>
</local:SharedResourceDictionary>
